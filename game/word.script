require("globals.global")
--main:/instance0#word
go.property("speed", 0)
local function delete(self)
	go.delete()
	ALL_WORD = ALL_WORD + 1
	if self.down_word then
		msg.post("main:/go#guigame", "down", {value = false})
	end
	KILL_ALL = false
	set_accuracy()
end

local function minus_hp(self)
	set_life(1)
	go.delete()
	if self.down_word then
		msg.post("main:/go#guigame", "down", {value = false})
	end
end

local function finish_word(self)
	self.down_word = true
	msg.post("main:/go#guigame", "down", {value = true})
	go.cancel_animations(".")
	go.animate("#label", "color", go.PLAYBACK_ONCE_FORWARD, RED_COLOR, go.EASING_LINEAR, 3, 0, minus_hp)
end

local function move_word(self)
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(self.pos.x,350,0), go.EASING_LINEAR, self.speed, 0, finish_word)
end

local function touch_word(self)
	local start_pos = vmath.vector3(self.pos.x,0,0)
	local end_pos = go.get_position()
	if self.is_life then
		self.is_life = false
		sound.play("#click1")
		go.cancel_animations(".")
		go.cancel_animations("#label")
		msg.post("@render:", "draw_line", { start_point = start_pos, end_point = end_pos, color = WHITE_COLOR })
		set_score(self.bonus)
		-- msg.post("main:/go#guigame", "touch", {value = self.word})
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_OUTSINE, 0.6, 0, delete)
		if self.bonus == 3 then
			go.animate("#label", "color", go.PLAYBACK_ONCE_FORWARD, GREEN_COLOR, go.EASING_LINEAR, 0.3, 0)
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	math.randomseed(os.time())
	-- set WORD
	local rnd = math.random(1, #WORD_LIST)
	self.word = WORD_LIST[rnd]
	self.down_word = false
	label.set_text("#label", self.word)
	remove_word(rnd)
	
	-- position WORD
	self.pos = go.get_position()
	move_word(self)
	-- life WORD
	self.is_life = true
	self.bonus = 1
end

function on_input(self, action_id, action)
	if action_id == hash(self.word) and action.pressed then
		if hash(self.word) == action_id then
			touch_word(self)
		end
	end
end
function update(self, dt)
	if KILL_ALL then
		touch_word(self)
	end
	if TOUCH_WORD == self.word then
		touch_word(self)
		TOUCH_WORD = ""
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("word_keyboard") then
		if self.word == message.value then
			touch_word(self)
		end
	elseif message_id == hash("trigger_response") then
		if message.enter then
			self.bonus = 3
		else
			self.bonus = 1
		end
		
	end
end