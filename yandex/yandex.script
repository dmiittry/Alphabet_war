require("globals.global")
require("globals.text")
local yagames = require("yagames.yagames")

local function adv_open(self)
	print('open')
	sound.set_group_gain("down", 0)
	sound.set_group_gain("bg", 0)
	sound.set_group_gain("master", 0)
end

local function adv_close(self, was_shown)
	print('close')
	msg.post("menu:/go#menu", "change_text")
	sound.set_group_gain("down", 0)
	sound.set_group_gain("bg", 0.5)
	sound.set_group_gain("master", 0,5)
end

local function adv_offline(self)
	print('offle')
	-- Internet is offline
	msg.post("menu:/go#menu", "change_text")
end

local function adv_error(self, err)
	if err then
		print("bad adv_error :(", err)
		msg.post("menu:/go#menu", "change_text")
	end
end

local function rewarded_open(self)
	print('reward open')
	sound.set_group_gain("down", 0)
	sound.set_group_gain("bg", 0)
	sound.set_group_gain("master", 0)
end

PRIZE = false
local function rewarded_rewarded(self)
	print('reward rewarded')
	PRIZE = true
end

local function rewarded_close(self)
	sound.set_group_gain("down", 0)
	sound.set_group_gain("bg", 0.5)
	sound.set_group_gain("master", 0,5)
	if PRIZE then
		msg.post("menu:/go#menu", "comeback")
		msg.post("main:/go#guigame", "rewarded")
		PRIZE = false
	end
end

local function rewarded_error(self, err)
	if err then
		print("bad rewarded_error :(", err)
	end
end

local function showfeedback(self, err, result)
	if err then
		print("bad showfeedback :(", err)
	end
end

local function canshowfeedback(self, err, result)
	if result then
		yagames.feedback_request_review(showfeedback)
	end
	if err then
		print("bad canshowfeedback :(", err)
	end
end
local function auth_player(self, err, result)
	if err then
		print("bad auth_player :(", err)
	end
end

local TABLE_NAME = "leaderboard"

local function init_handler(self, err)
	if err then
		print("bad init_handler :(", err)
	else
		yagames.player_init({scopes = false, signed = true}, function(self, err)
			if err then
				yagames.auth_open_auth_dialog(function(self, err) print("error") end)
				print("error", err)
			else
				local app = yagames.environment()
				local rus = app.i18n.lang
				print("language", rus)
				if rus == "ru" then
					change_lang("ru")
				else
					change_lang("en")
				end
				yagames.player_get_data(nil, function(self, err, stats)
					if err then
						LEVEL = 1
						set_record(0)
						print("error stats = ", err)
					else
						LEVEL = stats.level
						set_record(stats.record)
						print("get stats = ", LEVEL)
						print("get record = ", stats.record)
						if LEVEL == nil then
							LEVEL = 1
							set_record(0)
							print("set stats = ", LEVEL)
						end
					end
				end)
				yagames.leaderboards_init(function(self, err)
					print("yagames.leaderboards_init:", err or "OK!")
					if not err then
						yagames.leaderboards_get_description(TABLE_NAME, function(self, err, result)
							if err then
								print("yagames.leaderboards_get_description:", err)
							else
								print("yagames.leaderboards_get_description:", result)
							end
						end)
					end
				end)
			end
		end)
		yagames.features_loadingapi_ready()
		msg.post("menu:/go#menu", "change_text")
		msg.post(".", "show_fullscreen_adv")
	end
end
-- url: [menu:/go#yandex]
function init(self)
	yagames.init(init_handler)
end

function on_message(self, message_id, message)
	if message_id == hash("show_rewarded_video") then
		print('show_rewarded_video')
		yagames.adv_show_rewarded_video({
			open = rewarded_open,
			rewarded = rewarded_rewarded,
			close = rewarded_close,
			error = rewarded_error
		})
	elseif message_id == hash("show_fullscreen_adv") then
		print('show_fullscreen_adv')
		yagames.adv_show_fullscreen_adv({
			open = adv_open,
			close = adv_close,
			offline = adv_offline,
			error = adv_error
		})
	elseif message_id == hash("show_feedback") then
		yagames.feedback_can_review(canshowfeedback)		
	elseif message_id == hash("set_stats") then
		yagames.player_set_data({level = message.value, record = message.record}, true, function(self, err)
			print("yagames.player_set_data:", err or "OK")
		end)
	elseif message_id == hash("leaderboard") then
		print("leaderboard = ", message.value)
		yagames.leaderboards_init(function(self, err)
			print("yagames.leaderboards_init:", err or "OK!")
			if not err then
				yagames.leaderboards_set_score(TABLE_NAME, message.value, nil, function(self, err)
					print("yagames.leaderboards_set_score (score=1):", err or "OK")
				end)
			end
		end)
	end
end